{"version":3,"sources":["app.css","../../../node_modules/node-neat/node_modules/bourbon-neat/app/assets/stylesheets/grid/_box-sizing.scss","base/_global.scss","../../../node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_clearfix.scss","elements/_elements.scss","../../../node_modules/node-neat/node_modules/bourbon-neat/app/assets/stylesheets/grid/_span-columns.scss","../../../node_modules/node-neat/node_modules/bourbon-neat/app/assets/stylesheets/grid/_private.scss"],"names":[],"mappings":"AAKA,KACE,qBAAuB,CCCtB,ADEH,iBENC,kBAAiB,CAClB,AAEA,2ZF0FE,aG5Ec,AH6Ed,eG5Ec,AH6Ed,SG5ES,ACbX,UAAG,AJ2FD,wBKjCS,ALkCT,QK/BW,CLgCZ,AAID,8EAWE,aI5GW,CJ6GZ,AAED,KACE,aM/GkB,CNgHnB,AAED,MAEE,eAAiB,CAClB,AAED,aAEE,WAAa,CACd,AAED,oDAIE,WAAY,AACZ,YAAc,CACf,AAED,MACE,iBAAkB,AAClB,wBAA0B,CAC3B,AAED,SACE,oBAAc,AAAd,aAAc,AACd,eAAiB,CAClB,AAED,KACE,mBAAoB,AACpB,WAAa,AAOb,mDAAwD,CAEzD,AAED,OACE,WAAY,AACZ,iBAAmB,CACpB,AAED,eACE,cAAe,AACf,aAAc,AACd,WAAa,CACd,AAED,GACE,cAAgB,CACjB,AAED,EACE,gBAAiB,AACjB,aAAe,CAChB,AAED,KACE,sBAAuB,AACvB,cAAe,AACf,WAAa,AACb,eAAkB,CACnB,AAED,cACE,iBAAkB,AAClB,kBAAmB,AACnB,gBAAkB,CACnB,AAED,oBACE,cAAe,AACf,WAAY,AACZ,UAAY,CACb,AAED,wBACE,cAAe,AACf,WAAY,AACZ,gBAAiB,AACjB,sBAAuB,AACvB,qBAAuB,CACxB,AAED,mCACE,cAAgB,CACjB,AAED,oCACE,wBACE,cAAe,AACf,WAAY,AACZ,gBAAiB,AACjB,qBAAsB,AACtB,qBAAuB,CACxB,AAED,mCACE,cAAgB,CACjB,CACF,AAED,oCACE,wBACE,cAAe,AACf,WAAY,AACZ,WAAY,AACZ,sBAAuB,AACvB,qBAAuB,CACxB,AAED,mCACE,cAAgB,CACjB,CACF","file":"../scss/app.min.css","sourcesContent":["/*$visual-grid: true;\n$visual-grid-color: #bfbfbf;\n$visual-grid-index: front;\n$visual-grid-opacity: 0.4;*/\n\nhtml {\n  box-sizing: border-box;\n}\n\n*,\n*::after,\n*::before {\n  box-sizing: inherit;\n}\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  font: inherit;\n  font-size: 100%;\n  margin: 0;\n  padding: 0;\n  vertical-align: baseline;\n  border: 0;\n}\n\n/* HTML5 display-role reset for older browsers */\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\n\nbody {\n  line-height: 1;\n}\n\nol,\nul {\n  list-style: none;\n}\n\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: '';\n  content: none;\n}\n\ntable {\n  border-spacing: 0;\n  border-collapse: collapse;\n}\n\n.testing {\n  display: flex;\n  width: 71.42857%;\n}\n\nbody {\n  background: #c3c3c3;\n  color: black;\n  background: -webkit-radial-gradient(circle, white 50%, #c3c3c3);\n  /* Safari */\n  background: -o-radial-gradient(circle, white 50%, #c3c3c3);\n  /* Opera 11.6 to 12.0 */\n  background: -moz-radial-gradient(circle, white 50%, #c3c3c3);\n  /* Firefox 3.6 to 15 */\n  background: radial-gradient(circle, white 50%, #c3c3c3);\n  /* Standard syntax */\n}\n\n.block {\n  width: 100%;\n  text-align: center;\n}\n\n.block__image1 {\n  display: block;\n  height: 500px;\n  margin: auto;\n}\n\nh1 {\n  font-size: 24px;\n}\n\np {\n  font: 16px serif;\n  color: #4a4a4a;\n}\n\ncode {\n  font-family: monospace;\n  padding: 0 5px;\n  color: white;\n  background: black;\n}\n\ndiv.container {\n  max-width: 1200px;\n  margin-right: auto;\n  margin-left: auto;\n}\n\ndiv.container::after {\n  display: table;\n  clear: both;\n  content: '';\n}\n\ndiv.container .section1 {\n  display: block;\n  float: left;\n  width: 48.93617%;\n  margin-right: 2.12766%;\n  margin-left: 34.04255%;\n}\n\ndiv.container .section1:last-child {\n  margin-right: 0;\n}\n\n@media screen and (max-width: 768px) {\n  div.container .section1 {\n    display: block;\n    float: left;\n    width: 58.97436%;\n    margin-right: 2.5641%;\n    margin-left: 30.76923%;\n  }\n\n  div.container .section1:last-child {\n    margin-right: 0;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  div.container .section1 {\n    display: block;\n    float: left;\n    width: 100%;\n    margin-right: 6.66667%;\n    margin-left: 26.66667%;\n  }\n\n  div.container .section1:last-child {\n    margin-right: 0;\n  }\n}","@charset \"UTF-8\";\n\n@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    box-sizing: border-box;\n  }\n\n  * {\n    &,\n    &::after,\n    &::before {\n      box-sizing: inherit;\n    }\n  }\n}\n","//CSS Reset\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n// Global\n\n.testing {\n  display: flex;\n  width: percentage(5/7);\n  // Percentage is a Sass function that will be evaluated to CSS when compiled\n}\nbody {\n    color: black;\n    background-color: #c3c3c3;\n    background: -webkit-radial-gradient(circle, white 50%, #c3c3c3); /* Safari */\n  background: -o-radial-gradient(circle, white 50%, #c3c3c3); /* Opera 11.6 to 12.0 */\n  background: -moz-radial-gradient(circle, white 50%, #c3c3c3); /* Firefox 3.6 to 15 */\n  background: radial-gradient(circle, white 50%, #c3c3c3); /* Standard syntax */\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n","\n.block{\n    width:100%; text-align:center;\n&__image1{ height: 500px;display : block;\n    margin : auto;}\n}\nh1{font-size:24px;}\np{color:#4a4a4a;font-family:serif;font-size:16px}\ncode{background:black;color:white;font-family:monospace; padding:0px 5px;}\ndiv.container {\n  @include outer-container;\n    .section1 {\n  @include span-columns(6);\n        @include shift(4);\n}\n .section1 {\n  @include media($tablet) { // As defined in _grid-settings.scss\n    @include span-columns(6);\n      @include shift(3);\n  }\n}\n.section1 {\n  @include media($mobile) { // As defined in _grid-settings.scss\n    @include span-columns(4);\n      @include shift(1);\n  }\n}        \n}\n\n\n","@charset \"UTF-8\";\n\n/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\n///\n/// @param {List} $span\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\n///\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\n///\n///   The values can be separated with any string such as `of`, `/`, etc.\n///\n///   `$columns` also accepts decimals for when it's necessary to break out of the standard grid. E.g. Passing `2.4` in a standard 12 column grid will divide the row into 5 columns.\n///\n/// @param {String} $display [block]\n///   Sets the display property of the element. By default it sets the display propert of the element to `block`.\n///\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\n///\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\n///\n/// @example scss - Usage\n///   .element {\n///     @include span-columns(6);\n///\n///    .nested-element {\n///      @include span-columns(2 of 6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: block;\n///     float: left;\n///     margin-right: 2.35765%;\n///     width: 48.82117%;\n///   }\n///\n///   .element:last-child {\n///     margin-right: 0;\n///   }\n///\n///   .element .nested-element {\n///     display: block;\n///     float: left;\n///     margin-right: 4.82916%;\n///     width: 30.11389%;\n///   }\n///\n///   .element .nested-element:last-child {\n///     margin-right: 0;\n///   }\n\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n\n  $parent-columns: get-parent-columns($container-columns) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  $display-table: is-display-table($container-display-table, $display);\n\n  @if $display-table  {\n    display: table-cell;\n    width: percentage($columns / $container-columns);\n  } @else {\n    float: #{$opposite-direction};\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse {\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\n    }\n\n    @if $display == collapse or $display == block-collapse {\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\n\n      &:last-child {\n        width: flex-grid($columns, $container-columns);\n      }\n\n    } @else {\n      margin-#{$direction}: flex-gutter($container-columns);\n      width: flex-grid($columns, $container-columns);\n\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n  }\n}\n","$parent-columns: $grid-columns !default;\n$fg-column: $column;\n$fg-gutter: $gutter;\n$fg-max-columns: $grid-columns;\n$container-display-table: false !default;\n$layout-direction: LTR !default;\n\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n}\n\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n}\n\n@function get-parent-columns($columns) {\n  @if $columns != $grid-columns {\n    $parent-columns: $columns !global;\n  } @else {\n    $parent-columns: $grid-columns !global;\n  }\n\n  @return $parent-columns;\n}\n\n@function is-display-table($container-is-display-table, $display) {\n  @return $container-is-display-table == true or $display == table;\n}\n"]}